/* background/notifiers/catalogNotifier.js [06/03/2017] */
RPlus.notifiers.catalog = (function () {
	// Users who bought https://www.roblox.com/catalog/133970575/Old-New-Limited-Buy-Button
	var oldButtonOwners = [48103520, 49584642, 25708286, 2533795, 10695496, 16133422, 25457952, 29022659, 1565828, 10903234, 60684695, 28270350, 9738642, 4214261, 441825, 68728334, 13779106, 33374257, 34763167, 22486576, 30380671, 23078326, 22025583, 23387029, 26061794, 3994876, 6377064, 23368512, 60603007, 30651579, 53314481, 41107875, 13060661, 7812548, 45601875, 849088, 15478033, 37259264, 30456580, 16397457, 20093911, 16031105, 8237417, 3055965, 34454923, 6285620, 18118194, 1784593, 24107314, 68085132, 24788066, 17312289, 25214736, 18981862, 21555770, 42974107, 66820270, 14309811, 16261346, 10422851, 67700356, 28384148, 32627573, 13759873, 19190222, 46541288, 25814658, 15753405, 35935158, 71062368, 43925717, 51297402, 22933337, 6452092, 1236145, 64453771, 7320896, 44058635, 66930185, 1720707, 39673518, 9691717, 24996494, 2150653, 38647142, 22787256, 36070193, 771417, 18910710, 7225118, 19503260, 52623138, 7180198, 8737833, 338277, 24843220, 23942741, 621731, 19576094, 38325661, 3062094, 6059675, 15163535, 3080234, 11114008, 21486880, 22540798, 19005753, 47087354, 3052771, 5745, 9047922, 1081692, 13837849, 72801929, 63478293, 13292817, 19717956, 3163315, 8958670, 31415649, 14369683, 14872477, 14990937, 13435821, 17196398, 23313558, 14713397, 32172098, 61369874, 17693175, 46826994, 3489260, 37540446, 7744317, 11551579, 43884443, 16610221, 16900854, 20212681, 40710800, 19977967, 15763111, 27538722, 20293810, 4215776, 63354548, 20532808, 5267274, 67840068, 25138867, 9469221, 16593385, 3673286, 22365670, 16828310, 2930505, 31611367, 3992144, 32251935, 46277413, 14750020, 5566075, 22167222, 14743806, 36561766, 15992424, 56794190, 6802494, 70998839, 7874437, 19357824, 4686858, 40842434, 49207141, 2672463, 20776279, 8022155, 53398904, 33623753, 11415980, 33712225, 5550155, 45478781, 11044605, 57275457, 15805140, 34252185, 32136988, 39626635, 10776079, 21976403, 10490099, 8051145, 5210581, 17678155, 9089937, 15352323, 71397460, 562368, 16393884, 3151171, 57515128, 15889996, 20963, 19256410, 1237666, 7841486, 65405656, 2687074, 11174532, 8922312, 2448802, 31913385, 16684710, 20970102, 68244533, 4035424, 56054144, 25661233, 19085230, 40804613, 15652784, 45825644, 68523927, 3965809, 39381885, 18768949, 61713432, 11077829, 37412564, 360016, 734945, 6229713, 22595889, 22940107, 7397713, 8482809, 62105686, 38083724, 21945330, 14052130, 6999364, 21661548, 50747821, 13330258, 48017023, 45286379, 17688712, 19067325, 52269463, 29662728, 57307948, 28558742, 46329117, 9544246, 9544183, 5551429, 886870, 13179097, 27057428, 17695930, 38465805, 3439659, 29584121, 648842, 29371917, 10294651, 20883524, 1310377, 33249292, 4056828, 22815054, 712819, 17016147, 20598136, 56441769, 9433499, 74777205, 3555595, 20466411, 9435875, 14693216, 16192883, 28287022, 8681389, 6952932, 9324346, 4094524, 373950, 8885463, 41896804, 29825299, 17253583, 53544682, 34417436, 15862988, 2803337, 8703083, 21532027, 60696194, 18948555, 30528357, 10525748, 16879423, 13042729, 6503173, 33417669, 5276962, 4309939, 32729470, 8064278, 21875616, 69820279, 19599756, 60138201, 2897149, 24319589, 18000731, 9770984, 1856863, 16505559, 20986719, 68270035, 29109991, 56791789, 1000717, 38670894, 21495152, 27497305, 22640993, 17897891, 54499326, 25057974, 22235653, 23378817, 9438438, 52777576, 71674857, 25043732, 6064318, 1527248, 23441688, 20967858, 11816529, 51475463, 16492520, 5193371, 2108078, 288737, 18033125, 14438549, 16333943, 1912087, 3713161, 35543468, 44566002, 59064427, 4996293, 30925849, 6735009, 32644022, 14188665, 34788690, 1210210, 24330496, 34253782, 22618843, 23473447, 30009973, 19598936, 1208414, 63349413, 76951730, 9472109, 23021243, 6465519, 67115845, 25330072, 15058317, 61042340, 3779383, 13693182, 9560567, 58267314, 5012801, 38099137, 54942543, 40656243, 25154705, 36384321, 17506380, 76747092, 23297026, 14189334, 29291029, 7023834, 20252180, 1857025, 61108888, 13349712, 1629606, 33412125, 71202651, 36180631, 66795138, 19693775, 23558637, 52931885, 16763647, 55457343, 58902408, 1113446, 4934881, 35782289, 36740759, 32807065, 43636900, 19206605, 26330685, 27842645, 63731661, 2207291, 19318799, 3927, 2182958, 4812582, 52945829, 25838502, 76340411, 10929008, 736588, 840236, 19546792, 32914047, 50533904, 40848272, 515323, 31790662, 19566737, 5700900, 9791113, 50774350, 44164830, 28705662, 13574281, 18445142, 32506856, 34383177, 23889807, 15205965, 7533622, 76991785, 3173565, 5911037, 20649127, 5946366, 21342231, 858276, 2585370, 52391352, 68568878, 50740098, 44165, 5243496, 13855208, 56218771, 9981083, 26661026, 47143359, 5466003, 66234025, 24665531, 23856938, 17184396, 43307253, 23619542, 9858770, 960552, 14775533, 18044898, 11470857, 31820308, 78255285, 21137670, 61240383, 73730445, 14368562, 73601813, 78352050, 7243885, 9066972, 29391484, 42644199, 6312538, 58202812, 31512764, 109490, 37167128, 12014954, 2402019, 17174670, 13203163, 18976373, 39268591, 27988172, 23701121, 39834595, 7589682, 32912452, 34404570, 10438595, 847202, 14058779, 7122864, 20518724, 28133031, 43613559, 41658733, 71572927, 20992404, 10491342, 6422764, 15853457, 21646772, 18460794, 44916127, 23690437, 16678128, 8975156, 39293813, 14689716, 23879103, 2009831, 64485712, 4387565, 42376516, 74849896, 20377125, 21793507, 6361510, 8734631, 11064792, 35701860, 24793480, 773506, 1907051, 17618206, 10585217, 31251228, 30542393, 9849433, 2839546, 41004713, 10359367, 1572288, 36203282, 32425968, 17102107, 13127035, 78629022, 37998759, 6220197, 37943641, 670603, 28282149, 26626414, 16206073, 31025122, 17820096, 25234821, 6580, 27863148, 54293556, 23809117, 6339923, 2384684, 30765917, 75630878, 6616321, 17040016, 28642356, 6534426, 14069257, 57447210, 361738, 6643751, 45118430, 1244016, 44526609, 9245235, 4356411, 27656, 65476983, 4038863, 51364061, 6479158, 28681063, 64337870, 5960219, 15631081, 4288991, 21469330, 321352, 6683808, 17903155, 15174910, 8283698, 6726672, 23327427, 16686027, 9777151, 49585637, 46591508, 15716112, 18053857, 42421023, 57602054, 18231176, 5302288, 21780378, 1880161, 11088025, 713793, 81658599, 46074285, 38293247, 30144435, 20921875, 7107738, 42584380, 13041557, 44047712, 34368866, 53714647, 445454, 51356179, 54134064, 34615722, 7252081, 27710614, 9000604, 74173407, 9598691, 3778038, 29172986, 50978966, 56538839, 13797102, 19305571, 17774821, 28436805, 75831600, 37998055, 9960695, 17768673, 70556831, 80929794, 56730270, 69780436, 19099943, 1367612, 76967868, 53252113, 29901803, 64315104, 48223461, 44052422, 30435257, 72726917, 44097012, 25030905, 63823686, 20726279, 9721904, 80682868, 127780, 8186640, 24067716, 5311175, 6465281, 41753892, 38246881, 79328144, 1693236, 37330692, 40431034, 81047425, 11348402, 33983819, 37261311, 41286421, 35239082, 32126600, 3297865, 1458153, 20887656, 31030421, 21104829, 83868196, 7058943, 81448555, 8913531, 78748986, 29585647, 28341131, 28877678, 2004690, 64818317, 47776918, 15538410, 53217485, 53072308, 37296749, 2738735, 13894759, 14043632, 60171211, 18387459, 10816443, 24296607, 80762715, 38712208, 413000, 31913717, 27967165, 14433470, 46188958, 14744551, 10901169, 3484465, 13992341, 5414629, 2632362, 10064852, 79783576, 13262157, 84267270, 22360380, 52940600, 83973784, 25238253, 60016262, 2033570, 59331690, 28245291, 40397833, 9553783, 1593163, 23153577, 13271738, 61292461, 45433838, 54234378, 5589408, 73139450, 11154735, 19536244, 1206688, 27504257, 32147273, 51686081, 55714828, 77388679, 36087799, 26478306, 20096385, 75830432, 69028942, 797270, 9769187, 35582568, 34978, 9933671, 39009067, 5749622, 75868492, 31827822, 14949389, 84053248, 57893847, 34898673, 61416390, 60458161, 10225798, 5227701, 46091939, 73130220, 37353905, 21949146, 45063537, 20453041, 62601473, 2166584, 608536, 8895155, 7405505, 29919693, 52563597, 26120607, 20925099, 4321389, 34698174, 6059858, 984511, 41340401, 50453773, 35573599, 69556907, 39253497, 78878460, 34629480, 18071525, 43068978, 13294739, 51819111, 84251004, 12009250, 77917629, 61905306, 36628732, 21128420, 36177873, 22769439, 26510441, 31761830, 9842503, 20334246, 32007412, 21612714, 11471636, 75801315, 57616587, 28050431, 73721574, 20691393, 65705966, 15920638, 58823944, 21974470, 15767056, 9668202, 5017950, 28383577, 53235797, 28218228, 20321970, 1984078, 36010373, 2301754, 11463582, 3495119, 50295162, 16135344, 32420831, 24091669, 73072929, 167795, 27840619, 13405461, 31318463, 24499173, 15886356, 35784797, 37833873, 51143671, 21059405, 10662840, 36776746, 15177859, 10246399, 83120653, 34447891, 5937030, 17109948, 76959400, 30410135, 38233113, 2676175, 34874703, 465456, 17599451, 2568081, 14404658, 130971, 39909486, 6440137, 53866328, 51328852, 67859325, 2539556, 82438379, 22233700, 38906522, 10165959, 36271761, 43045152, 53099914, 47594464, 24647634, 73409552, 24124160, 45826157, 6753906, 6897199, 28761502, 17309557, 16234301, 52611162, 29358163, 43350404, 63063212, 69359108, 42416688, 9362481, 50936688, 36058405, 9954469, 17738344, 75325733, 39564444, 8457596, 19570250, 2604310, 19833788, 23830983, 22957092, 75809849, 35167748, 31058142, 59612732, 52452243, 30984344, 10124494, 74247887, 15318016, 40350648, 17759575, 19335451, 39230832, 17479196, 50191623, 4478405, 22014522, 30146981, 46861724, 24768549, 26238688, 39793489, 47616393, 33139501, 18378874, 7065458, 19701422, 8484752, 39524307, 82334550, 21082798, 6358242, 40263182, 20988055, 70916268, 73097893, 17824601, 14713206, 16161864, 31645353, 73465421, 8732935, 68240149, 58147829, 10106017, 30624677, 23453538, 3237846, 20451682, 7762434, 1097964, 46281223, 52716206, 32982361, 61376305, 82274, 40298435, 63523522, 60385572, 64158352, 26427517, 13641127, 15263764, 48458301, 50168178, 33822411, 38260738, 1516624, 37454694, 30631092, 53354434, 43030032, 15364947, 17036348, 77543218, 32174428, 73287644, 11824196, 55016819, 10157832, 18983034, 61230572, 32113025, 22902802, 6318909, 17998023, 23848593, 29290485, 17266052, 33576796, 4538657, 50456630, 53817562, 25739428, 22597564, 54482261, 32766135, 15289050, 56167427, 13649632, 24977556, 13462960, 30006430, 40269205, 54780765, 7910565, 30245237, 35692886, 7628151, 20509589, 28243725, 85123843, 24499976, 14660730, 1457307, 22012480, 36486740, 57557941, 9725456, 4070084, 23556663, 33007434, 33868, 2172908, 7510841, 24560880, 47496535, 18933921, 510926, 13060240, 72965144, 39979813, 3636, 25611425, 321912, 891379, 18247660, 35991964, 20791548, 76774555, 87095053, 15953077, 60581630, 134637, 89222433, 8576463, 16459805, 32139008, 17273619, 66511134, 88203849, 1053468, 10057146, 42006191, 89396584, 88648344, 17986922, 3024367, 5866753, 18617640, 66515354, 44008493, 669295, 36991314, 17761444, 19011363, 34741945, 13094490, 59943819, 89759438, 93145172, 9603827, 2898823, 8094904, 49798034, 15730523, 4738857, 57387418, 30045846, 30031949, 64234317, 5537253, 1623038, 98321261, 62466308, 38275312, 41896583, 38979592, 5700193, 4377860, 32579803, 88753299, 35671679, 571700, 45935968, 22462516, 11127714, 7873122, 62920785, 11661022, 43769813, 13480014, 98942416, 3786444, 37122699, 43988083, 15438942, 76218608, 8350982, 21204123, 16292071, 59911495, 13461236, 1527027, 39481287, 60033062, 4774525, 24959439, 27808716, 31623744, 5797240, 34791529, 9843936, 6503952, 10753770, 96980574, 36535625, 14183409, 66204498, 14864739, 6887421, 62210483, 19207440, 6246982, 95232035, 51077791, 19533771, 44408520, 52974784, 29023148, 198975, 23233631, 3026072, 21358118, 67836390, 18717028, 32376738, 806844, 92587045, 25494340, 53673376, 104311182, 7914241, 6594156, 21734457, 44412136, 65421001, 30744884, 38517562, 524170, 31705056, 24341187, 9486557, 13632505, 61902685, 92390656, 97325400, 21486219, 2267902, 33134785, 1157409, 59131068, 608706, 64170255, 14943069, 10190020, 1405424, 36382592, 1123551, 1667163, 92483610, 24778369, 19535960, 80462635, 4161908, 227548, 65341904, 19618897, 6773739, 49441318, 22187857, 3297857, 18515506, 5857814, 29081800, 15098126, 67677894, 92586308, 27865601, 676873, 35044886, 1796872, 18940305, 26323788, 20086281, 41354819, 33039131, 1202801, 66293229, 32109152, 30190639, 46680687, 60988928, 50958059, 29396553, 5977081, 6121723, 61619387, 65863440, 93141659, 16008361, 89402181, 91382331, 49248891, 33813799, 22111411, 70964299, 56883177, 29391281, 46932152, 89096487, 23215815, 73965174, 87866003, 73693360, 1103543, 5949768, 27730444, 63514540, 10448124, 14946581, 3452085, 102326892, 96828813, 24536005, 5730064, 74341043, 59013609, 32297123, 49574408, 55409157, 5283599, 52366419, 1459889, 6186920, 7092153, 8481375, 1135681, 15939625, 23857369, 38523468, 1652153, 59869313, 68433133, 26713367, 14182128, 14838908, 59580038, 14426294, 3331629, 72213444, 41540910, 28002628, 3333942, 20764833, 18926942, 81426638, 5590390, 34878754, 108412038, 75780782, 10087710, 21130120, 20639537, 18551147, 13395867, 37335848, 24477572, 18831302, 21940907, 20475685, 47532876, 7420149, 65628453, 68452070, 1151624, 64566417, 87271798, 65522150, 23612443, 21419481, 30944240, 29642255, 48785196, 74262014, 74449499, 715875, 66394134, 4109297, 37867204, 61783470, 29100668, 18842620, 21343706, 35100778, 51319778, 191955, 93214050, 62609130, 57963092, 38309506, 66045842, 2600228, 21843533, 32417269, 39279504, 50312821, 62768244, 9887606, 3010846, 1736620, 23370881, 8124942, 33948509, 32686796, 57447062, 23490189, 15755219, 25979877, 46239467, 36451530, 72002688, 10215090, 10799006, 100991932, 15434675, 63645456, 1131774, 24992250, 61586703, 36676673, 33843860, 42837397, 85835305, 72484355, 34349544, 85932926, 38661185, 18321581, 17702993, 56069318, 24710066, 17405235, 117842814, 31970843, 6861365, 112211785, 29012402, 2779406, 98575634, 13518774, 64596459, 15712769, 54339499, 52723786, 29806839, 32156751, 2620322, 91376653, 12292797, 36152626, 3047769, 96115780, 85182485, 5140157, 59091077, 37971598, 26682018, 85226459, 8358628, 44513702, 5878592, 38373416, 15327940, 247964, 16592700, 64398253, 4241147, 68723521, 22476624, 80933802, 94985437, 64900583, 87304848, 83669880, 62356934, 10451443, 46886485, 62059539, 24690045, 75233377];
	var lastRegistration = 0;


	function checkV2Button(userId, callBack) {
		Roblox.inventory.userHasAsset(userId, 391072534).then(function (hasAsset) {
			callBack(hasAsset);
		}, function (errs) {
			callBack(false);
		});
	}

	var checkButton = $.promise.cache(function (resolve, reject, userId) {
		$.get("http://api.roblox.plus/v1/rpluspremium/" + userId).done(function (data) {
			if (data.data) {
				resolve(true);
			} else {
				resolve(false);
			}
		}).fail(function () {
			reject([{ code: 0, message: "HTTP Request Failed" }]);
		});
	}, {
		queued: true,
		resolveExpiry: 60 * 1000,
		rejectExpiry: 10 * 1000
	});

	function doesUserHaveButton(userId, callBack) {
		if (userId <= 0) {
			callBack(false);
			return;
		}
		if (ext.id === "cbbncmomfboiebkhgigdhfoljcnggben") {
			checkButton(userId).then(function(has) {
				callBack(has);
			}).catch(function() {
				callBack(false);
			});
		} else {
			if (oldButtonOwners.includes(userId)) {
				callBack(true);
				return;
			}
			Roblox.social.getFriends(48103520).then(function (friends) {
				for (var n = 0; n < friends.length; n++) {
					if (friends[n].id == userId) {
						callBack(true);
						return;
					}
				}
				checkV2Button(userId, callBack);
			}, function () {
				checkV2Button(userId, callBack);
			});
		}
	}


	function sendToken() {
		Roblox.users.getCurrentUserId().then(function (userId) {
			if (userId <= 0 || !storage.get("itemNotifier")) {
				setTimeout(sendToken, 5000);
				return;
			}

			chrome.gcm.register(["473489927480"], function (registrationId) {
				$.post("http://api.roblox.plus/v1/itemnotifier/registertoken", {
					token: registrationId,
					robloxUserId: userId
				}).done(function () {
					lastRegistration = +new Date;
				}).fail(function () {
					setTimeout(sendToken, 5000);
				});
			});
		}).catch(function () {
			setTimeout(sendToken, 5000);
		});
	}

	function processMessage(message) {
		console.log("Catalog notifier message", message);
		if (message.data && typeof (message.data.json) === "string" && storage.get("itemNotifier")) {
			try {
				var data = JSON.parse(message.data.json);
				var assetId = NaN;

				var metadata = {
					url: data.url
				};

				if (data.url) {
					assetId = Roblox.catalog.getIdFromUrl(data.url) || NaN;
					if (!isNaN(assetId)) {
						metadata.robloxSound = (data.title || "").toLowerCase().includes("it's free")
							? 130771265
							: Number((storage.get("notifierSounds") || {}).items) || 205318910;
					}
				}

				$.notification({
					title: data.title || "Roblox+ Catalog Notifier",
					context: data.message || "",
					icon: data.icon || ext.manifest.icons['48'],
					buttons: data.buttons || [],
					items: data.items || {},
					clickable: true,
					metadata: metadata
				}).buttonClick(function (index) {
					var notification = this;
					if (!isNaN(assetId) && notification.buttons[index].includes("Buy for")) {
						notification.close();
						var start = performance.now();
						Roblox.catalog.getAssetInfo(assetId).then(function (asset) {
							// Use the price from the notification - worst case scenario it fails but we don't want to charge the user more than they think they're being charged.
							Roblox.economy.purchaseProduct(asset.productId, pround(notification.items.Price)).then(function (receipt) {
								console.log("Purchased!", receipt);
								var speed = performance.now() - start;
								$.notification({
									title: "Purchased!",
									context: asset.name,
									items: speed > 0 ? {
										"Speed": speed.toFixed(3) + "ms"
									} : {},
									icon: notification.icon,
									clickable: true,
									metadata: {
										url: data.url
									}
								});
							}).catch(function (e) {
								$.notification({
									title: "Purchase failed",
									icon: notification.icon,
									context: e[0] && e[0].message ? e[0].message : "Unknown issue",
									clickable: true,
									metadata: {
										url: data.url
									}
								});
							});
						}).catch(function (e) {
							$.notification({
								title: "Purchase failed",
								icon: notification.icon,
								context: e[0] && e[0].message ? e[0].message : "Unknown issue",
								clickable: true,
								metadata: {
									url: data.url
								}
							});
						});
					}
				});
			} catch (e) {
				console.error("Error processing notifier message", message, e);
			}
		}
	}


	chrome.gcm.onMessage.addListener(processMessage);

	ipc.on("catalogNotifier:testBuyButton", function () {
		processMessage({
			data: {
				json: JSON.stringify({
					title: "New Limited",
					message: "Noob Assist: S'mores Snacker",
					items: {
						"Price": "R$75",
						"Sales": "5000/10000"
					},
					buttons: ["Buy for R$75"],
					icon: "https://www.roblox.com/asset-thumbnail/image?width=110&height=110&assetId=904518348",
					url: "https://www.roblox.com/catalog/904518348/Noob-Assist-Smores-Snacker"
				})
			},
			from: "self"
		});
	}).on("catalogNotifier:userOwnsButton", function (data, callBack) {
		Roblox.users.getCurrentUserId().then(function (id) {
			doesUserHaveButton(id, callBack);
		}, function (err) {
			callBack(false);
		});
	});


	function init() {
		setInterval(sendToken, 30 * 60 * 1000);
		sendToken();
	}

	init();

	return {
		processMessage: processMessage,
		getLastRegistration: function () {
			return new Date(lastRegistration);
		}
	};
})();


// WebGL3D
